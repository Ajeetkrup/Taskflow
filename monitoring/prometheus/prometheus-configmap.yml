apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: taskflow
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      # - "first_rules.yml"
      # - "second_rules.yml"

    scrape_configs:
      # Prometheus itself
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      # Kubernetes API Server
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      # TaskFlow Services - User Service (Port 3000 as per your service config)
      - job_name: 'user-service'
        static_configs:
          - targets: ['user-service:3000']
        metrics_path: '/metrics'
        scrape_interval: 30s  # Less frequent scraping for t2.micro

      # TaskFlow Services - Task Service (Port 3000 as per your service config)
      - job_name: 'task-service'
        static_configs:
          - targets: ['task-service:3000']
        metrics_path: '/metrics'
        scrape_interval: 30s

      # TaskFlow Services - Analytics Service (Port 3000 as per your service config)
      - job_name: 'analytics-service'
        static_configs:
          - targets: ['analytics-service:3000']
        metrics_path: '/metrics'
        scrape_interval: 30s

      # TaskFlow Services - Notification Service (Port 3000 as per your service config)
      - job_name: 'notification-service'
        static_configs:
          - targets: ['notification-service:3000']
        metrics_path: '/metrics'
        scrape_interval: 30s

      # Kubernetes Nodes
      - job_name: 'kubernetes-nodes'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)

      # Kubernetes Pods
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - taskflow
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name