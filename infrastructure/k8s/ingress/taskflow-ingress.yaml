apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: taskflow-ingress
  namespace: taskflow
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    
    # Enhanced CORS configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS, HEAD, PATCH"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,Accept,Origin,X-Forwarded-For,X-Forwarded-Proto,X-Forwarded-Host"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-max-age: "1728000"
    
    # Configuration snippet for assets and redirects
    nginx.ingress.kubernetes.io/configuration-snippet: |
      # Redirect requests without trailing slash for monitoring tools
      rewrite ^(/grafana)$ $1/ redirect;
      rewrite ^(/prometheus)$ $1/ redirect;
      
      # Headers for better browser compatibility
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      
      # Proxy headers for monitoring tools
      proxy_set_header Accept-Encoding "";
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Real-IP $remote_addr;
      
      # Handle preflight OPTIONS requests
      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, HEAD, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,Accept,Origin,X-Forwarded-For' always;
        add_header 'Access-Control-Max-Age' 1728000 always;
        add_header 'Content-Type' 'text/plain charset=UTF-8' always;
        add_header 'Content-Length' 0 always;
        return 204;
      }

spec:
  rules:
    - http:
        paths:
          # Health check endpoint
          - path: /health
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 80
          
          # Monitoring/Metrics endpoints
          - path: /metrics/user
            pathType: Prefix
            backend:
              service:
                name: user-service
                port:
                  number: 3000
          - path: /metrics/task
            pathType: Prefix
            backend:
              service:
                name: task-service
                port:
                  number: 3000
          - path: /metrics/analytics
            pathType: Prefix
            backend:
              service:
                name: analytics-service
                port:
                  number: 3000
          - path: /metrics/notifications
            pathType: Prefix
            backend:
              service:
                name: notification-service
                port:
                  number: 3000
          
          # Prometheus with path rewriting
          - path: /prometheus(/|$)(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: prometheus
                port:
                  number: 9090
          
          # Grafana with path rewriting  
          - path: /grafana(/|$)(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: grafana
                port:
                  number: 3000
          
          # API routes - these must come before static assets
          - path: /api/auth
            pathType: Prefix
            backend:
              service:
                name: user-service
                port:
                  number: 3000
          - path: /api/users
            pathType: Prefix
            backend:
              service:
                name: user-service
                port:
                  number: 3000
          - path: /api/tasks
            pathType: Prefix
            backend:
              service:
                name: task-service
                port:
                  number: 3000
          - path: /api/analytics
            pathType: Prefix
            backend:
              service:
                name: analytics-service
                port:
                  number: 3000
          - path: /api/notifications
            pathType: Prefix
            backend:
              service:
                name: notification-service
                port:
                  number: 3000
          
          # Static assets directory - CRITICAL: This must come before the catch-all
          - path: /assets
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 80
          
          # Individual static file patterns - More specific matching
          - path: /.*\.js$
            pathType: ImplementationSpecific
            backend:
              service:
                name: frontend-service
                port:
                  number: 80
          
          - path: /.*\.css$
            pathType: ImplementationSpecific
            backend:
              service:
                name: frontend-service
                port:
                  number: 80
          
          - path: /.*\.(png|jpg|jpeg|gif|ico|svg|webp)$
            pathType: ImplementationSpecific
            backend:
              service:
                name: frontend-service
                port:
                  number: 80
          
          - path: /.*\.(woff|woff2|ttf|eot)$
            pathType: ImplementationSpecific
            backend:
              service:
                name: frontend-service
                port:
                  number: 80
          
          # Frontend routes (catch-all) - MUST BE LAST
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 80